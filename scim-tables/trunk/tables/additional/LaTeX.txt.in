### File header must not be modified
### This file must be encoded into UTF-8.
### This file comes from unicon module.
### generated by Joerg Haustein (jchaustein@gmx.de)
SCIM_Generic_Table_Phrase_Library_TEXT
VERSION_1_0

### Begin Table definition.
BEGIN_DEFINITION

### An unique id to distinguish this table among others.
### Use uuidgen to generate this kind of id.
UUID = decc1d5a-f4ed-4616-982b-53f0d6855704

### A unique number indicates the version of this file.
### For example the last modified date of this file.
### This number must be less than 2^32.
SERIAL_NUMBER = 20060709

ICON = @SCIM_ICONDIR@/LaTeX.png

### The default name of this table
NAME = Latex

### Author of this table
### AUTHOR =

### Supported locales of this table
LANGUAGES = other

### Prompt string to be displayed in the status area.
STATUS_PROMPT = Σ

### If true then the first candidate phrase
### will be selected automatically during inputing.
AUTO_SELECT = TRUE

### If true then a multi wildcard will be appended
### at the end of inputing string automatically.
AUTO_WILDCARD = TRUE

### If true then the result string will be committed to client automatically.
### This should be used with AUTO_SELECT = TRUE.
AUTO_COMMIT = TRUE

### If true then the inputted string will be automatically splitted during inputing.
AUTO_SPLIT = TRUE

### If true then the phrases' frequencies will be adjusted dynamically.
DYNAMIC_ADJUST = FALSE

### If true then the preedit area will be filled up by the current candidate phrase automatically.
AUTO_FILL = FALSE

### If true then the lookup table will always be shown if there is any candidate phrase.
### Otherwise the lookup table won't be shown unless the user requires it by moving the preedit caret left.
ALWAYS_SHOW_LOOKUP = TRUE

### Enable full width punctuation property
USE_FULL_WIDTH_PUNCT = FALSE

### Use full width punctuation by default
DEF_FULL_WIDTH_PUNCT = FALSE

### Enable full width letter property
USE_FULL_WIDTH_LETTER = FALSE

### Use full width letter by default
DEF_FULL_WIDTH_LETTER = FALSE

### The maxmium length of a key.
MAX_KEY_LENGTH = 20

### Valid input chars.
VALID_INPUT_CHARS = abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ1234567890\_[]{}

### Single wildcard char, can have multiple chars.
###SINGLE_WILDCARD_CHAR = 

### Multi wildcard char
### MULTI_WILDCARD_CHAR = 

### The key strokes to split inputted string.
### SPLIT_KEYS = quoteright

### The key strokes to commit the convert result to client.
### COMMIT_KEYS = space,Return

### The key strokes to forward the inputted string to client.
### FORWARD_KEYS = Return

### The key strokes to select candidiate phrases.
### SELECT_KEYS = 1,2,3,4,5,6,7,8,9,0

### The key strokes to page up the lookup table.
PAGE_UP_KEYS = Page_Up

### The key strokes to page down the lookup table.
PAGE_DOWN_KEYS = Page_Down

END_DEFINITION

### Begin Table data.
BEGIN_TABLE
\	\
\\	\
\backslash	\
\hat	^
\_	_
\grave	`
\tilde	~
\pounds	£
\S	§
\ddot	¨
\lnot	¬
\bar	¯
\circ	∘
\circ	°
\pm	±
\acute	´
\mu	µ
\P	¶
\cdot	·
\frac14	¼
\frac12	½
\frac34	¾
\times	×
\div	÷
\Gamma	Γ
\Delta	Δ
\Theta	Θ
\Lambda	Λ
\Xi	Ξ
\Pi	Π
\Sigma	Σ
\Phi	Φ
\Psi	Ψ
\Omega	Ω
\alpha	α
\beta	β
\gamma	γ
\delta	δ
\varepsilon	ε
\zeta	ζ
\eta	η
\theta	θ
\iota	ι
\kappa	κ
\lambda	λ
\mu	μ
\nu	ν
\xi	ξ
\pi	π
\rho	ρ
\varsigma	ς
\sigma	σ
\tau	τ
\upsilon	υ
\phi	φ
\chi	χ
\psi	ψ
\omega	ω
\vartheta	ϑ
\varphi	ϕ
\varpi	ϖ
\varsigma	ϛ
\varrho	ϱ
\epsilon	ϵ
\dag	†
\ddag	‡
\bullet	•
\dots	…
\mathbb{C}	ℂ
\mathcal{E}	ℇ
\mathfrak{H}	ℌ
\mathbb	ℍ
\hbar	ℏ
\Im	ℑ
\ell	ℓ
\mathbb	ℕ
\wp	℘
\mathbb	ℙ
\mathbb	ℚ
\Re	ℜ
\mathbb	ℝ
\mathbb	ℤ
\Omega	Ω
\mho	℧
\mathfrak	ℨ
\mathfrak	ℭ
\Finv	Ⅎ
\aleph	ℵ
\beth	ℶ
\gimel	ℷ
\daleth	ℸ
\frac13	⅓
\frac23	⅔
\frac15	⅕
\frac25	⅖
\frac35	⅗
\frac45	⅘
\frac16	⅙
\frac56	⅚
\frac18	⅛
\frac38	⅜
\frac58	⅝
\frac78	⅞
\frac1	⅟
\leftarrow	←
\uparrow	↑
\rightarrow	→
\downarrow	↓
\leftrightarrow	↔
\updownarrow	↕
\nwarrow	↖
\nearrow	↗
\searrow	↘
\searrow	↙
\nleftarrow	↚
\nrightarrow	↛
\leadsto	↝
\twoheadleftarrow	↞
\twoheadrightarrow	↠
\leftarrowtail	↢
\rightarrowtail	↣
\mapsto	↦
\hookleftarrow	↩
\hookrightarrow	↪
\looparrowleft	↫
\looparrowright	↬
\leftrightsquigarrow	↭
\nleftrightarrow	↮
\Lsh	↰
\Rsh	↱
\curvearrowleft	↶
\curvearrowright	↷
\circlearrowleft	↺
\circlearrowright	↻
\leftharpoonup	↼
\leftharpoondown	↽
\upharpoonright	↾
\upharpoonleft	↿
\rightharpoonup	⇀
\rightharpoondown	⇁
\downharpoonright	⇂
\downharpoonleft	⇃
\rightleftarrows	⇄
\leftrightarrows	⇆
\leftleftarrows	⇇
\upuparrows	⇈
\rightrightarrows	⇉
\downdownarrows	⇊
\leftrightharpoons	⇋
\rightleftharpoons	⇌
\nLeftarrow	⇍
\nLeftrightarrow	⇎
\nRightarrow	⇏
\Leftarrow	⇐
\Uparrow	⇑
\Rightarrow	⇒
\Downarrow	⇓
\Leftrightarrow	⇔
\Updownarrow	⇕
\Lleftarrow	⇚
\rightsquigarrow	⇝
\dashleftarrow	⇠
\dashrightarrow	⇢
\forall	∀
\complement	∁
\partial	∂
\exists	∃
\nexists	∄
\emptyset	∅
\Delta	∆
\nabla	∇
\in	∈
\notin	∉
\in	∊
\ni	∋
\not\ni	∌
\ni	∍
\blacksquare	∎
\prod	∏
\amalg	∐
\sum	∑
\mp	∓
\dotplus	∔
\setminus	∖
\ast	∗
\bullet	∙
\surd	√
\sqrt	√
\sqrt[3]	∛
\sqrt[4]	∜
\propto	∝
\infty	∞
\angle	∠
\measuredangle	∡
\sphericalangle	∢
\mid	∣
\nmid	∤
\parallel	∥
\nparallel	∦
\wedge	∧
\vee	∨
\cap	∩
\cup	∪
\int	∫
\iint	∬
\iiint	∭
\oint	∮
\oiint	∯
\oiiint	∰
\therefore	∴
\because	∵
\stackrel	∸
\sim	∼
\backsim	∽
\wr	≀
\nsim	≁
\simeq	≃
\not\simeq	≄
\cong	≅
\ncong	≇
\approx	≈
\not\approx	≉
\approxeq	≊
\asymp	≍
\Bumpeq	≎
\bumpeq	≏
\doteq	≐
\doteqdot	≑
\fallingdotseq	≒
\risingdotseq	≓
\eqcirc	≖
\circeq	≗
\stackrel	≘
\stackrel	≙
\stackrel	≚
\stackrel	≛
\triangleq	≜
\defeq	≝
\stackrel	≞
\stackrel	≟
\neq	≠
\equiv	≡
\not\equiv	≢
\leq	≤
\geq	≥
\leqq	≦
\geqq	≧
\lneqq	≨
\gneqq	≩
\ll	≪
\gg	≫
\between	≬
\not\asymp	≭
\nless	≮
\ngtr	≯
\nleq	≰
\ngeq	≱
\lesssim	≲
\gtrsim	≳
\not\lesssim	≴
\not\gtrsim	≵
\lessgtr	≶
\gtrless	≷
\not\lessgtr	≸
\not\gtrless	≹
\prec	≺
\succ	≻
\preccurlyeq	≼
\succcurlyeq	≽
\precsim	≾
\succsim	≿
\nsucc	⊀
\nprec	⊁
\subset	⊂
\supset	⊃
\not\subset	⊄
\not\supset	⊅
\subseteq	⊆
\supseteq	⊇
\nsubseteq	⊈
\nsupseteq	⊉
\subsetneq	⊊
\supsetneq	⊋
\uplus	⊎
\sqsubset	⊏
\sqsupset	⊐
\sqsubseteq	⊑
\sqsupseteq	⊒
\sqcap	⊓
\sqcup	⊔
\oplus	⊕
\ominus	⊖
\otimes	⊗
\oslash	⊘
\odot	⊙
\circledcirc	⊚
\circledast	⊛
\circleddash	⊝
\boxplus	⊞
\boxminus	⊟
\boxtimes	⊠
\boxdot	⊡
\vdash	⊢
\dashv	⊣
\bot	⊤
\perp	⊥
\vDash	⊧
\models	⊨
\Vdash	⊩
\Vvdash	⊪
\nvdash	⊬
\nvDash	⊭
\not\Vdash	⊮
\nVdash	⊯
\lhd	⊲
\rhd	⊳
\unlhd	⊴
\unrhd	⊵
\multimapdotbothA	⊶
\multimapdotbothB	⊷
\multimap	⊸
\intercal	⊺
\veebar	⊻
\barwedge	⊼
\bigwedge	⋀
\bigvee	⋁
\bigcap	⋂
\bigcup	⋃
\diamond	⋄
\cdot	⋅
\star	⋆
\divideontimes	⋇
\bowtie	⋈
\ltimes	⋉
\rtimes	⋊
\leftthreetimes	⋋
\rightthreetimes	⋌
\backsimeq	⋍
\curlyvee	⋎
\curlywedge	⋏
\Subset	⋐
\Supset	⋑
\Cap	⋒
\Cup	⋓
\pitchfork	⋔
\lessdot	⋖
\gtrdot	⋗
\lll	⋘
\ggg	⋙
\lesseqgtr	⋚
\gtreqless	⋛
\eqslantless	⋜
\eqslantgtr	⋝
\curlyeqprec	⋞
\curlyeqsucc	⋟
\not\curlyeqprec	⋠
\not\curlyeqsucc	⋡
\not\sqsubseteq	⋢
\not\sqsupseteq	⋣
\lnsim	⋦
\gnsim	⋧
\precnsim	⋨
\succnsim	⋩
\ntriangleleft	⋪
\ntriangleright	⋫
\ntrianglelefteq	⋬
\ntrianglerighteq	⋭
\vdots	⋮
\cdots	⋯
\ddotsup	⋰
\ddots	⋱
\spadesuit	♠
\heartsuit	♡
\diamondsuit	♢
\clubsuit	♣
\spadesuit	♤
\heartsuit	♥
\diamondsuit	♦
\clubsuit	♧
\flat	♭
\natural	♮
\sharp	♯
END_TABLE
